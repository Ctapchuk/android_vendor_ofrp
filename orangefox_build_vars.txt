# ------------------------------------
#
# Custom build VARs for the OrangeFox Recovery
#
# These should be declared - in a shell script (eg, in "vendorsetup.sh"), or at the command line - before building
#
# Copyright (C) 2019-2021 OrangeFox Recovery Project
# Date: 13 February 2021
#
# -----------------------------------
#
#
"TARGET_ARCH"
  - set this to "arm" or "arm64", depending on whether your device is 32-bit or 64-bit
  - eg., "export TARGET_ARCH=arm"
  - default = arm64
#
"OF_AB_DEVICE"
   - whether the device is an A/B device
   - set to 1 if your device is an A/B device (** make sure that it really is **)
   - if you enable this, all these will be set automatically to "1":
    	OF_USE_MAGISKBOOT
    	OF_USE_MAGISKBOOT_FOR_ALL_PATCHES
   - default = 0
#
"FOX_PORTS_TMP" 
   - point to a custom temp directory for creating the zip installer
#
"FOX_PORTS_INSTALLER" 
   - point to a custom directory for amended/additional installer files 
   - the contents will simply be copied over before creating the zip installer
#
"FOX_LOCAL_CALLBACK_SCRIPT"
   - point to a custom "callback" script that will be executed just before creating the final recovery image
   - eg, a script to delete some files, or add some files to the ramdisk
#
"BUILD_2GB_VERSION" [As of 20210210, this is now OBSOLETE]
#
"FOX_REPLACE_BUSYBOX_PS"
   - set to 1 to replace the (stripped down) busybox version of the "ps" command
   - if this is defined, the busybox "ps" command will be replaced by a fuller (arm64) version
   - default = 0
   - this should NOT be enabled for arm32 devices
#
"FOX_REPLACE_TOOLBOX_GETPROP"
   - set to 1 to replace the (stripped down) toolbox version of the "getprop" command
   - if this is defined, the toolbox "getprop" command will be replaced by a fuller version (resetprop)
   - default = 0
#
"FOX_RECOVERY_INSTALL_PARTITION"
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's recovery partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/recovery"
   - default = "/dev/block/bootdevice/by-name/recovery"
#
"FOX_RECOVERY_SYSTEM_PARTITION" [NEW]
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's system partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/system"
     (eg, some Samsung/HTC devices have a different location for system)
   - default = "/dev/block/bootdevice/by-name/system"
#
"FOX_RECOVERY_VENDOR_PARTITION" [NEW]
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's vendor partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/vendor"
     (eg, some Samsung devices have a different location for vendor)
   - default = "/dev/block/bootdevice/by-name/vendor"
#
"FOX_USE_LZMA_COMPRESSION"
   - set this to 1 if you want to use (slow but better compression) lzma compression for your ramdisk; 
   - * this requires you to have an up-to-date lzma binary in your build system, and 
   - * set this in your BoardConfig (it will be set automatically if you don't set it yourself):
   -     LZMA_RAMDISK_TARGETS := recovery
   - * your kernel must also have built-in lzma compression support
   - default = 0 (meaning use standard gzip compression (fast, but doesn't compress as well))
#
"FOX_USE_TAR_BINARY"
   - set this to 1 if you want the gnu tar binary to be added (/sbin/gnutar)
   - this must be set in a shell script, or at the command line, before building
   - this will add about 420kb to the size of the recovery image
   - default = 0
#
"FOX_USE_ZIP_BINARY" [As of 20200723, this is now OBSOLETE]
#
"FOX_USE_NANO_EDITOR"
   - set this to 1 if you want the nano editor to be added
   - this must be set in a shell script, or at the command line, before building
   - this will add about 300kb to the size of the recovery image
   - default = 0
#
"FOX_USE_BASH_SHELL"
   - set this to 1 if you the bash shell to replace the busybox "sh"
   - default = 0
   - if not set, bash will still be copied, but it will not replace "sh"
#
"FOX_ASH_IS_BASH"
   - set this to 1 if you the bash shell to replace the busybox "ash"
   - default = 0
   - if not set, bash will still be copied, but it will not replace "ash"
#
"FOX_REMOVE_BASH"
   - set this to 1 if you want to remove bash completely from the recovery
   - default = 0
#
"OF_USE_MAGISKBOOT"
   - set to 1 to use magiskboot for patching the ROM's boot image
   - else, mkbootimg/unpackbootimg will be used
   - magiskboot does a better job of patching boot images, but it is slow
   - default = 0
#
"OF_USE_MAGISKBOOT_FOR_ALL_PATCHES"
   - set to 1 to use magiskboot for all patching of boot images *and* recovery images
   - this means that mkbootimg/unpackbootimg will be deleted
   - if this is set, this script will also automatically set OF_USE_MAGISKBOOT to 1
   - default = 0
#
"OF_FORCE_MAGISKBOOT_BOOT_PATCH_MIUI"
   - set to 1 to force the use magiskboot for patching the ROM's boot image when
   - installing a MIUI ROM, or the OrangeFox zip on a MIUI ROM (regardless of
   - DM-Verity or Forced-Encryption settings, which will be left alone if that is
   - what the user has chosen) - this is for the purpose of stopping MIUI from
   - overwriting OrangeFox with its own stock recovery
   - "OF_USE_MAGISKBOOT" must also be set to "1" if you want to use this
   - default = 0
#
"OF_USE_NEW_MAGISKBOOT" [ **OBSOLETE** - only v20.x magiskboot is now used]
   - set to 1 to use the new (v20.x) magiskboot binary instead of the v1.93 binary
   - do NOT set this, unless you are ABSOLUTELY sure that your device will NEVER
   - have an Android version that is less than Oreo (ie, no less than SDK 26)
   - default = 0
#
"OF_DISABLE_UPDATEZIP"
   - set to 1 to disable recovery zip creation
   - default = 0
#
"OF_SUPPORT_PRE_FLASH_SCRIPT"
   - set to 1 to support running a script before flashing zips (other than ROMs)
   - the script must be called /sbin/fox_pre_flash - and you need to copy it there yourself
   - default = 0
#
"OF_DONT_PATCH_ON_FRESH_INSTALLATION"
   - set to 1 to prevent patching dm-verity and forced-encryption when the OrangeFox zip is flashed
   - default = 0
   - if dm-verity is enabled in the ROM, and this is turned on, there will be a bootloop
#
 "OF_TWRP_COMPATIBILITY_MODE" ; "OF_DISABLE_MIUI_SPECIFIC_FEATURES"
   - set either of them to 1 to enable stock TWRP-compatibility mode 
   - in this mode, MIUI OTA, and dm-verity/forced-encryption patching will be disabled
   - default = 0
#
"OF_DONT_PATCH_ENCRYPTED_DEVICE"
   - set to 1 to avoid applying the forced-encryption patches on encrypted devices
   - default = 0
   - this should not be used unless the default is causing issues on your device
   - the newest Xiaomi devices seem to require this
#
"OF_KEEP_DM_VERITY"; 
   - set to 1 to turn OrangeFox dm-verity settings *OFF* on every bootup
   - default = 0
#
"OF_KEEP_FORCED_ENCRYPTION"; 
   - set to 1 to turn OrangeFox forced-encryption settings *OFF* on every bootup
   - default = 0 (in lavender, default=1)
#
"OF_KEEP_DM_VERITY_FORCED_ENCRYPTION"; 
   - set to 1 to turn OrangeFox dm-verity AND forced-encryption settings *OFF* on every bootup
   - default = 0
#
"OF_FORCE_DISABLE_DM_VERITY"; [NEW]
   - set to 1 to turn OrangeFox dm-verity settings *ON* on every bootup
   - default = 0
#
"OF_FORCE_DISABLE_FORCED_ENCRYPTION"; [NEW]
   - set to 1 to turn OrangeFox forced-encryption settings *ON* on every bootup
   - default = 0
#
"OF_FORCE_DISABLE_DM_VERITY_FORCED_ENCRYPTION"; [NEW]
   - set to 1 to turn OrangeFox dm-verity AND forced-encryption settings *ON* on every bootup
   - default = 0
#
"OF_DISABLE_DM_VERITY"; [NEW]
   - set to 1 to turn OrangeFox dm-verity settings on by default (on fresh installation)
   - default = 0 (should be set to "1" for older Xiaomi devices like kenzo, libra, mido)
#
"OF_DISABLE_FORCED_ENCRYPTION"; [NEW]
   - set to 1 to turn OrangeFox forced-encryption settings on by default (on fresh installation)
   - default = 0
#
"OF_DISABLE_DM_VERITY_FORCED_ENCRYPTION"; [NEW]
   - set to 1 to turn OrangeFox dm-verity AND forced-encryption settings on by default (on fresh installation)
   - default = 0
#
"OF_CLASSIC_LEDS_FUNCTION"
   - set to 1 to use the old R9.x Leds function
   - default = 0
#
"OF_SKIP_FBE_DECRYPTION" 
   - set to 1 to skip the FBE decryption routines (prevents hanging at the Fox logo or Redmi/Mi logo)
   - default = 0
#
"OF_OTA_RES_DECRYPT"
   - set to 1 to try and decrypt internal storage (instead bailing out with an error) during MIUI OTA restore
   - default = 0
#
"OF_NO_MIUI_OTA_VENDOR_BACKUP"
   - set to 1 to prevent backing up of vendor_image when preparing for incremental MIUI OTA (upon flashing a MIUI ROM)
   - such a backup is required for new (2019+) Xiaomi devices (eg, lavender, violet, raphael, ginkgo, etc)
   - default = 0
#
"OF_NO_RELOAD_AFTER_DECRYPTION"
   - set to 1 to prevent OrangeFox from re-running the startup process after decryption
   - default = 0
#
"OF_NO_TREBLE_COMPATIBILITY_CHECK"
   - set to 1 to disable checking for compatibility.zip in ROMs
   - default = 0
#
"FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER"
   - set to 1 to use the TWRP build system's tools to build the recovery image
   - requires patches to "build/core/Makefile" in the build system
   - if in doubt, do NOT use this var
   - default = 0
#
"FOX_RESET_SETTINGS"
   - set to "disabled" to NOT reset OrangeFox settings to defaults, after installation of the OrangeFox zip
   - it is NOT recommended to disable this
   - default = 1
#
"FOX_DELETE_AROMAFM"
   - set to 1 to delete AromaFM from the zip installer (for devices where it doesn't work)
   - default = 0
#
"OF_USE_HEXDUMP"
   - set to 1 to use an external hexdump utility to get file header information (instead of internal code)
   - default = 0
#
"OF_USE_GREEN_LED"
   - set to 0 to remove the "green led" setting
   - default = 1
#
"OF_FLASHLIGHT_ENABLE"
  - whether the enable the flashlight feature
  - default is "1"
#
"OF_FL_PATH1" and "OF_FL_PATH2"
  - set custom flashlight path (if flashlight isn't working)
  - eg. OF_FL_PATH1="/sys/class/leds/led_torch_2"
#
"FOX_VERSION"
  - the version number of the release
#
"OF_MAINTAINER"
  - the maintainer's name
#
"OF_SCREEN_H"
  - Use this if your screen's aspect ratio is not 16:9
  - to calculate OF_SCREEN_H, if your screen width is not 1080, use this formula: <aspect ratio height>*120
  - e.g. if the aspect ratio is 19:9 then use 19*120 (=2280)
  - use "export OF_SCREEN_H=2280" to resize recovery to 19:9 screen
  - default = 1920
#
"OF_STATUS_H"
  - use this only when the device has a cutout
  - you do not need to add or subtract OF_STATUS_H from OF_SCREEN_H
  - use "export OF_STATUS_H=144" to change statusbar size to 144
  - Tip: take screenshot in android and count status bar height using any graphics editor (eg. MSPaint)
  - default = 72
#
"OF_STATUS_INDENT_LEFT" and "OF_STATUS_INDENT_RIGHT"
  - use OF_STATUS_INDENT_LEFT and OF_STATUS_INDENT_RIGHT when device has rounded corners
  - the recommended setting of these vars is 48 (when device has rounded corners)
  - default = 20
# 
"OF_HIDE_NOTCH"
  - add option to settings that makes status bar black (hides notch)
  - default = 0
# 
"OF_CLOCK_POS"
  - var to control clock position option for devices that has cutout
  - 0 => left, center and right clock positions available
  - 1 => left and right clock positions available
  - 2 => only left clock position available
  - default = 0
# 
"OF_ALLOW_DISABLE_NAVBAR"
  - set to 0 if device doesn't have hardware navigation buttons
  - if OF_ALLOW_DISABLE_NAVBAR is set to 0 user can't hide on-screen navbar
  - default = 1
# 
"OF_DONT_KEEP_LOG_HISTORY" [NEW]
  - Time-stamped copies of the recovery.log (in .zip format) will now be kept (in /sdcard/Fox/logs/)
  - this means that the previously saved recovery logs will not be overwritten
  - these will be in .zip format; users might need to clear them out periodically
  - enable this to turn off this feature (meaning that lastrecoverylog.log will be overwritten each time the recovery is rebooted)
  - default = 0
#
"FOX_BUGGED_AOSP_ARB_WORKAROUND" [NEW]
 - Use this to set an old UTC time for the build, to work around bugged alleged anti-rollback protection in some ROMs
 - eg, export FOX_BUGGED_AOSP_ARB_WORKAROUND="1546300800" [Tue Jan 1 2019 00:00:00 GMT]
 -     export FOX_BUGGED_AOSP_ARB_WORKAROUND="1420041600" [Wed Dec 31 2014 16:00:00 GMT]
 - default = nothing
#
"TARGET_DEVICE_ALT" [NEW]
 - Use this if the device has more than one code name, so that the OrangeFox zip
 - installer can support the alternative code name without just bombing out
 - eg, export TARGET_DEVICE_ALT="kate" (for kenzo/kate)
 -     export TARGET_DEVICE_ALT="willow" (for ginkgo/willow)
 -     export TARGET_DEVICE_ALT="blue, green, yellow, orange" (for multiple alt devices)
 - default = nothing
#
"OF_TARGET_DEVICES" [NEW]
- Use this if the device has more than one code name, but ROMs and other zip installers
- never check for all code names, therefore always causing "E3004 error 7" problems (eg, raphael/raphaelin)
- What this does is to cause OrangeFox to temporarily switch devices names to prevent error 7 from happening
- Note that this is temporary work-around that lasts until the recovery is rebooted.
- You should list all the valid code names for the device.
- eg, export OF_TARGET_DEVICES="raphaelin,raphael"
-
- NOTE: the purpose of this is quite different from TARGET_DEVICE_ALT (which only impacts on the creation of
- the OrangeFox zip installer). This variable actually impacts on the operation of OrangeFox while flashing
- a zip with OrangeFox. This is why it is mapped out to a separate build variable. It is deliberate done,
- so that it can trigger all these impacts in the live recovery session. You should only deploy a
- build using this variable after plenty of testing in all possible scenarios
#
"OF_SKIP_ORANGEFOX_PROCESS" [NEW]
 - Use this to 1 to skip the dm-verity/forced-encryption/boot images patches
 - If this is enabled, then "OF_DONT_PATCH_ON_FRESH_INSTALLATION" is also enabled automatically
 - default = 0
#
"OF_VANILLA_BUILD" [NEW]
 - Set this to 1 to make a plain build that skips all the OrangeFox patches
 - If this is enabled, a whole lot of other variables are also enabled automatically to disable various
 - OrangeFox extras, including "OF_SKIP_ORANGEFOX_PROCESS" above (see bootable/recovery/Android.mk for details)
 - With this enabled, it is very possible (even likely) that OrangeFox will be overwritten by stock recovery, so the
 - user may well need to flash some kind of "fcrypt" zip and/or magisk
 - default = 0
#
"OF_SUPPORT_OZIP_DECRYPTION" [NEW]
 - Set this to 1 to enable support for Realme oZip decryption
 - do not use this unless you know what you are doing (see below)
 - if this is enabled, you must also set "TW_OZIP_DECRYPT_KEY"
 - default = 0
#
"FOX_REMOVE_AAPT" [NEW]
 - Set this to 1 to remove the aapt binary from the build
 - This binary is 1.7mb in size, and using this variable is useful for reducing the size of the recovery
 - default = 0
#
"FOX_DRASTIC_SIZE_REDUCTION" [NEW] [EXPERIMENTAL!]
 - Set this to 1 for some really drastic attempts to reduce the size of the recovery image
 - This will remove source large files (including some fonts) from the build; don't worry if you see some
 - resource error messages in the recovery's debug screen
 - default = 0
#
"OF_CHECK_OVERWRITE_ATTEMPTS" [NEW]
 - Set this to 1 to check for attempts by a ROM's installer to overwrite OrangeFox with another recovery
 - If this is enabled, then OrangeFox will give users a 40-second countdown, to enable
 - them to reboot OrangeFox to stop the ROM installation, if they want
 - default = 0
#
"OF_FBE_METADATA_MOUNT_IGNORE" [NEW]
 - Set this to 1 if you are supporting FBE metadata encryption in your fstab, but don't want the user to be
 - spammed with metadata mount errors in ROMs that don't use metadata encryption
 - default = 0
#
"OF_FIX_OTA_UPDATE_MANUAL_FLASH_ERROR" [NEW]
- Set this to 1 to try to recover from error situations where people flash incremental block-based OTA zips manually
- An error will still be displayed, but OrangeFox will reboot itself into "Ors" mode and attempt to apply the OTA update (this is not guaranteed to always work)
- default = 0
#
"OF_PATCH_AVB20" [NEW]
- Set this to 1 to try patch AVB 2.0 so that OrangeFox is not replaced by stock recovery
- This requires magiskboot
- default = 0
#
"OF_SKIP_MULTIUSER_FOLDERS_BACKUP" [NEW]
- Set this to 1 to avoid parallel/dual apps or multi-user backup issues (error 255)
- This adds the relevant directories to the list of backup exclusions
- default = 0 (but you really *should* enable it on devices using FBE encryption)
#
"OF_USE_SYSTEM_FINGERPRINT" [NEW] [EXPERIMENTAL!] [This is obsolete in fox_10.0]
- Set this to 1 to use the system (installed ROM's) fingerprint as the recovery's fingerprint
- Use with care, since it may cause issues with some ROM installs/OTA updates
- default = 0
#
"OF_OTA_BACKUP_STOCK_BOOT_IMAGE" [NEW]
- Set this to 1 to create a backup of the boot.img from the ROM's zip during the OTA_BAK process when installing a ROM
- default = 0
#
"OF_SUPPORT_ALL_BLOCK_OTA_UPDATES" [NEW]
- Set this to 1 to enable support for block-based incremental OTA on custom ROMs that have this feature
- If enabled, flashing a custom ROM will run the same OTA_BAK/OTA_RES processes as with MIUI
- The default position is to support block-based incremental OTA in MIUI ROMs only
- default = 0
#
"OF_NO_MIUI_PATCH_WARNING" [NEW]
- Set this to 1 to suppress warnings that not patching MIUI may cause MIUI to not boot, or to overwrite the recovery with stock recovery
- default = 0
#
"OF_DISABLE_MIUI_OTA_BY_DEFAULT" [NEW]
- Set this to 1 to disable the OTA settings by default, meaning that users have to enable OTA manually
- default = 0
#
"OF_USE_TWRP_SAR_DETECT" [NEW]
- Set this to 1 to enable the new TWRP auto-detection of system-as-root in the installed ROM
- default = 0
#
"OF_QUICK_BACKUP_LIST" [NEW]
- Use this to specify the desired default list of partitions selected for "Quick Backup"
- Note: only specify a partition if you mount it in your fstab, else an error will be generated
- The partitions should be separated by a semi-colon, and the list should end with a semi-colon
- Example: export OF_QUICK_BACKUP_LIST="/data;/storage;/persist;"
#
"OF_USE_LOCKSCREEN_BUTTON" [NEW]
- Set this to 1 to replace the "Swipe up" lockscreen screen with a button
- This is especially useful (for the time being) for 720p screens
- default = 0
#
"FOX_USE_UNZIP_BINARY" [NEW]
- Set this to 1 to replace the busybox/toolbox unzip with a full InfoZip unzip binary
- Use with care, and ensure that it works as you expect
- default = 0
#
"FOX_REMOVE_ZIP_BINARY" [NEW]
- set this to 1 if you do NOT want the InfoZip zip binary to be added (to create zip archives)
- this must be set in a shell script, or at the command line, before building
- the binary will add about 275kb to the size of the recovery image
- default = 0
#
"FOX_ADVANCED_SECURITY" [NEW]
- set this to 1 to enable the advanced security features
- this forces ADB and MTP to be disabled until after you enter the recovery (ie, until after
- all decryption/recovery passwords are successfully entered)
- default = 0
#
"OF_NO_SAMSUNG_SPECIAL" [NEW]
- set this to 1 to disable some operations relating only to Samsung devices - these are:
-   1) appending "SEANDROIDENFORCE" to the recovery image of a Samsung device
-   2) creating an Odin flashable tar file of the recovery image
- this setting is only effective is FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER is set to 1
- all decryption/recovery passwords are successfully entered)
- default = 0
#
"OF_DISABLE_KEYMASTER2" [NEW]
- set this to 1 to disable the keymaster2 support code
- only do this if you are getting compiler errors with keymaster2 (eg, with legacy build systems)
- default = 0
#
"OF_LEGACY_SHAR512" [NEW]
- set this to 1 to avoid compiler errors in legacy build systems
- default = 0
#
"OF_DEVICE_WITHOUT_PERSIST" [NEW]
- set this to 1 if your device does not have a /persist partition
- default = 0
#
"OF_DISABLE_EXTRA_ABOUT_PAGE" [NEW]
- set this to 1 to disable display of the extra information under the "About" page
- you only need to do this if trying to display it causes problems
- default = 0
#
"OF_NO_SPLASH_CHANGE" [NEW]
- set this to 1 to disable changing the splash image
- you only need to do this if trying to change the splash image causes problems
- default = 0
#
"FOX_DELETE_MAGISK_ADDON" [Experimental!!!]
- set this to 1 to remove/disable the magisk addon
- If set, the magisk addon zips will be removed from the OrangeFox installer, and
- the relevant menu will be disabled so that magisk cannot be installed from the "Fox Addons" menu
- this feature is experimental - test very carefully!
- default = 0
#
"OF_REPORT_HARMLESS_MOUNT_ISSUES" [NEW] [FOX_10.0 builds only]
- set this to 1 to preserve the old behaviour of reporting harmless mount issues as errors
- the default setting is either not to report them at all, or to report them for information, rather than as errors
- default = 0
#
"FOX_DELETE_INITD_ADDON" [NEW]
- set this to 1 to delete the initd addon
- default = 0
#
"FOX_INSTALLER_DEBUG_MODE" [NEW]
- set this to 1 to put the OrangeFox zip installer in debug mode
- in the debug mode, when the zip is flashed, a large amount of information is written into the install.log file
- this is for developer testing only - you must disable this before release
- default = 0
#
"FOX_DISABLE_APP_MANAGER" [NEW]
- set this to 1 to disable the OrangeFox App Manager 
- sometimes there are issues with the App Manager - in such cases, use this variable to disable it
- default = 0
#
"FOX_USE_GREP_BINARY" [NEW]
- set this to 1 to replace the toybox/busybox "grep" with a full standalone GNU grep
- this is useful in cases where the original grep is causing problems
- default = 0
#
"FOX_REMOVE_BUSYBOX_BINARY" [NEW] [FOX_10.0 builds only]
- set this to 1 to delete the extra standalone /sbin/busybox binary from the fox_10.0 builds
- default = 0
#
"FOX_JAVA8_PATH" [NEW]
- use this to point to the installed java-8 binary
- eg, export FOX_JAVA8_PATH="/usr/lib/jvm/java-8-openjdk/jre/bin/java"
- default = "/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java"
#
"OF_SPLASH_MAX_SIZE"  [NEW] [FOX_10.0 builds only]
- use this to specify the maximum size (in kilobytes) of image files that can safely be used for splash images
- on some devices, the maximum safe size is 65 Kb; on others, the images can be very big (eg, megabytes)
- Note: verify that the maximum value you set is not too big (ie, test it yourself)
- if the splash image chosen by the user is too big, this can easily cause a "System is destroyed" scenario
- in that case, the user will need to flash the recovery image again, via fastboot
- eg, "export OF_SPLASH_MAX_SIZE=128" (ie, 128 Kb maximum)
- default = 4096 (ie, 4mb maximum)
#
"FOX_USE_XZ_UTILS" [NEW]
- set this to 1 if you want the XZ Utils (lzma, xz) to be added to the build (the binary is about 260kb in size)
- default = 0
#
"FOX_DYNAMIC_SAMSUNG_FIX" [NEW] [FOX_10.0 builds only]
- set this to 1 to provide a workaround for bug in Samsung exynos dynamic partition devices, which causes a bootloop on encountering some binaries
- when enabled, certain binaries (eg, bash, aapt, etc) are removed from (or not added to) the build 
- use this only if the recovery doesn't boot on your Samsung dynamic partition device
- default = 0
#
# -----------------------------------
