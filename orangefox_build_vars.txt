# ------------------------------------
#
# Custom build VARs for the OrangeFox Recovery, fox_12.1
#
# These build vars should be declared - in a shell script (eg, in "vendorsetup.sh"), or at the command line - before building
#
# Copyright (C) 2019-2023 OrangeFox Recovery Project
# Date: 03 April 2023
#
# -----------------------------------
#
#
"TARGET_ARCH"
  - set this to "arm" or "arm64", depending on whether your device is 32-bit or 64-bit
  - eg., "export TARGET_ARCH=arm"
  - default = arm64
#
"OF_AB_DEVICE"
   - whether the device is an A/B device
   - set to 1 if your device is an A/B device (** make sure that it really is **)
   - if you enable this, all these will be set automatically to "1":
    	OF_USE_MAGISKBOOT
    	OF_USE_MAGISKBOOT_FOR_ALL_PATCHES
   - default = 0
#
"OF_AB_DEVICE_WITH_RECOVERY_PARTITION" [NEW]
   - set to 1 if the device is an A/B device that has a dedicated recovery partition (** make sure that it really is **)
   - it is NOT normal for an A/B device to also have a dedicated recovery partition - but some OnePlus A/B devices do
   - if this is enabled, the following features will automatically be removed
   	* Changing the OrangeFox splash image/logo
   	* "Flash Current OrangeFox"
   	* "Reflash OrangeFox after flashing a ROM"
   - default = 0
#
"FOX_PORTS_TMP"
   - point to a custom temp directory for creating the zip installer
#
"FOX_PORTS_INSTALLER" 
   - point to a custom directory for amended/additional installer files 
   - the contents will simply be copied over before creating the zip installer
#
"FOX_LOCAL_CALLBACK_SCRIPT"
   - point to a custom "callback" script that will be executed just before creating the final recovery image
   - eg, a script to delete some files, or add some files to the ramdisk
#
"FOX_REPLACE_BUSYBOX_PS"
   - set to 1 to replace the (stripped down) busybox version of the "ps" command
   - if this is defined, the busybox "ps" command will be replaced by a fuller (arm64) version
   - default = 0
   - this should NOT be enabled for arm32 devices
#
"FOX_REPLACE_TOOLBOX_GETPROP"
   - set to 1 to replace the (stripped down) toolbox version of the "getprop" command
   - if this is defined, the toolbox "getprop" command will be replaced by a fuller version (resetprop)
   - default = 0
#
"FOX_RECOVERY_INSTALL_PARTITION"
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's recovery partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/recovery"
   - default = "/dev/block/bootdevice/by-name/recovery"
#
"FOX_RECOVERY_SYSTEM_PARTITION"
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's system partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/system"
     (eg, some Samsung/HTC devices have a different location for system)
   - default = "/dev/block/bootdevice/by-name/system"
#
"FOX_RECOVERY_VENDOR_PARTITION"
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's vendor partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/vendor"
     (eg, some Samsung devices have a different location for vendor)
   - default = "/dev/block/bootdevice/by-name/vendor"
#
"FOX_RECOVERY_BOOT_PARTITION" [R11.1 only]
   - !!! this should normally BE LEFT WELL ALONE !!!
   - set this ONLY if your device's boot partition is in a location that is
     different from the default "/dev/block/bootdevice/by-name/boot"
     (eg, some devices have a different location for boot)
   - default = "/dev/block/bootdevice/by-name/boot"
#
"FOX_USE_LZMA_COMPRESSION"
   - set this to 1 if you want to use (slow but better compression) lzma compression for your ramdisk; 
   - * this requires you to have an up-to-date lzma binary in your build system, and 
   - * set this in your BoardConfig (it will be set automatically if you don't set it yourself):
   -     BOARD_RAMDISK_USE_LZMA := true
   - * your kernel must also have built-in lzma compression support
   - default = 0 (meaning use standard gzip compression (fast, but doesn't compress as well))
#
"FOX_USE_LZ4_COMPRESSION"
   - set this to 1 if (for whatever reason) you want to use lz4 compression for your ramdisk;
   - * this requires you to have an up-to-date lz4 binary in your build system, and
   - * set this in your BoardConfig (it will be set automatically if you don't set it yourself):
   -     BOARD_RAMDISK_USE_LZ4 := true
   - * your kernel must also have built-in lz4 compression support
   - default = 0 (meaning use standard gzip compression, which provides better compression anyway)
#
"FOX_USE_TAR_BINARY"
   - set this to 1 if you want the gnu tar binary to be added (/sbin/gnutar)
   - this must be set in a shell script, or at the command line, before building
   - this will add about 420kb to the size of the recovery image
   - default = 0
#
"FOX_USE_SED_BINARY"
   - set this to 1 if you want the gnu sed binary to be added (/sbin/gnused)
   - this must be set in a shell script, or at the command line, before building
   - this will add about 200kb to the size of the recovery image
   - default = 0
#
"FOX_USE_BASH_SHELL"
   - set this to 1 if you the bash shell to replace the busybox "sh"
   - default = 0
   - if not set, bash will still be copied, but it will not replace "sh"
#
"FOX_ASH_IS_BASH"
   - set this to 1 if you the bash shell to replace the busybox "ash"
   - default = 0
   - if not set, bash will still be copied, but it will not replace "ash"
#
"FOX_REMOVE_BASH"
   - set this to 1 if you want to remove bash completely from the recovery
   - default = 0
#
"OF_USE_MAGISKBOOT" [!NOW ENABLED AUTOMATICALLY IN ALL CASES!]
   - set to 1 to use magiskboot for patching the ROM's boot image
   - else, mkbootimg/unpackbootimg will be used
   - magiskboot does a better job of patching boot images, but it is slow
   - default = 0
#
"OF_USE_MAGISKBOOT_FOR_ALL_PATCHES" [!NOW ENABLED AUTOMATICALLY IN ALL CASES!]
   - set to 1 to use magiskboot for all patching of boot images *and* recovery images
   - this means that mkbootimg/unpackbootimg will be deleted
   - if this is set, this script will also automatically set OF_USE_MAGISKBOOT to 1
   - default = 0
#
"OF_FORCE_MAGISKBOOT_BOOT_PATCH_MIUI"
   - set to 1 to force the use magiskboot for patching the ROM's boot image when
   - installing a MIUI ROM, or the OrangeFox zip on a MIUI ROM (regardless of
   - DM-Verity or Forced-Encryption settings, which will be left alone if that is
   - what the user has chosen) - this is for the purpose of stopping MIUI from
   - overwriting OrangeFox with its own stock recovery
   - "OF_USE_MAGISKBOOT" must also be set to "1" if you want to use this
   - default = 0
#
"OF_DISABLE_UPDATEZIP"
   - set to 1 to disable recovery zip creation
   - default = 0
#
"OF_DONT_PATCH_ON_FRESH_INSTALLATION"
   - set to 1 to prevent patching dm-verity and forced-encryption when the OrangeFox zip is flashed
   - default = 0
   - if dm-verity is enabled in the ROM, and this is turned on, there will be a bootloop
#
 "OF_TWRP_COMPATIBILITY_MODE" ; "OF_DISABLE_MIUI_SPECIFIC_FEATURES"
   - set either of them to 1 to enable stock TWRP-compatibility mode 
   - in this mode, MIUI OTA, and dm-verity/forced-encryption patching will be disabled
   - default = 0
#
"OF_DONT_PATCH_ENCRYPTED_DEVICE"
   - set to 1 to avoid applying the forced-encryption patches on encrypted devices
   - default = 0
   - this should not be used unless the default is causing issues on your device
   - the newest Xiaomi devices seem to require this
#
"OF_KEEP_DM_VERITY"; 
   - set to 1 to *UNTICK* the OrangeFox "Disable DM-Verity" box on every bootup
   - default = 0
#
"OF_KEEP_FORCED_ENCRYPTION"; 
   - set to 1 to *UNTICK* the OrangeFox "Disable Forced Encryption" box on every bootup
   - default = 0 (in lavender, default=1)
#
"OF_KEEP_DM_VERITY_FORCED_ENCRYPTION"; 
   - set to 1 to *UNTICK* both the OrangeFox "Disable DM-Verity" and "Disable Forced Encryption" boxes on every bootup
   - default = 0
#
"OF_FORCE_DISABLE_DM_VERITY";
   - set to 1 to **TICK** the OrangeFox "Disable DM-Verity" box on every bootup
   - default = 0
#
"OF_FORCE_DISABLE_FORCED_ENCRYPTION";
   - set to 1 to **TICK** the OrangeFox "Disable Forced Encryption" box on every bootup
   - default = 0
#
"OF_FORCE_DISABLE_DM_VERITY_FORCED_ENCRYPTION";
   - set to 1 to **TICK** both the OrangeFox "Disable DM-Verity" and "Disable Forced Encryption" boxes on every bootup
   - default = 0
#
"OF_DISABLE_DM_VERITY";
   - set to 1 to **TICK** the OrangeFox "Disable DM-Verity" box by default (on fresh installation)
   - default = 0 (should be set to "1" for older Xiaomi devices like kenzo, libra, mido)
#
"OF_DISABLE_FORCED_ENCRYPTION";
   - set to 1 to **TICK** the OrangeFox "Disable Forced Encryption" box by default (on fresh installation)
   - default = 0
#
"OF_DISABLE_DM_VERITY_FORCED_ENCRYPTION";
   - set to 1 to **TICK** both the OrangeFox "Disable DM-Verity" and "Disable Forced Encryption" boxes by default (on fresh installation)
   - default = 0
#
"OF_CLASSIC_LEDS_FUNCTION"
   - set to 1 to use the old R9.x Leds function
   - default = 0
#
"OF_SKIP_FBE_DECRYPTION" 
   - set to 1 to skip the FBE decryption routines (prevents hanging at the Fox logo or Redmi/Mi logo)
   - default = 0
#
"OF_SKIP_FBE_DECRYPTION_SDKVERSION"
   - This allows you to instruct OrangeFox to avoid trying to decrypt ROMs with a specific Android SDK/API number (and higher)
   - set to the Android SDK/API level which should be skipped. It is up to you to ensure that the value supplied makes sense and is correct
   - a warning will be printed on the log screen whenever the skip code is triggered, and no attempt will be made to decrypt data the partition
   - eg, "export OF_SKIP_FBE_DECRYPTION_SDKVERSION=31" (ie, don't try to decrypt Android 12 (SDK/API 31) or higher)
   - the valid SDK/API level numbers can be found at: "https://source.android.com/setup/start/build-numbers"
   - NOTE: do NOT use "OF_SKIP_FBE_DECRYPTION" if you are using this variable, because it will supersede this variable
   - default = nothing (ie, try to decrypt all Android API levels)
#
"OF_OTA_RES_DECRYPT"
   - set to 1 to try and decrypt internal storage (instead bailing out with an error) during MIUI OTA restore
   - default = 0
#
"OF_NO_MIUI_OTA_VENDOR_BACKUP"
   - set to 1 to prevent backing up of vendor_image when preparing for incremental MIUI OTA (upon flashing a MIUI ROM)
   - such a backup is required for new (2019+) Xiaomi devices (eg, lavender, violet, raphael, ginkgo, etc)
   - default = 0
#
"OF_NO_RELOAD_AFTER_DECRYPTION"
   - set to 1 to prevent OrangeFox from re-running the startup process after decryption
   - default = 0
#
"OF_NO_TREBLE_COMPATIBILITY_CHECK"
   - set to 1 to disable checking for compatibility.zip in ROMs
   - default = 0
#
"FOX_RESET_SETTINGS"
   - set to "disabled" to NOT reset OrangeFox settings to defaults, after installation of the OrangeFox zip
   - it is NOT recommended to disable this
   - default = 1
#
"FOX_DELETE_AROMAFM"
   - set to 1 to delete AromaFM from the zip installer (for devices where it doesn't work)
   - default = 0
#
"OF_USE_HEXDUMP"
   - set to 1 to use an external hexdump utility to get file header information (instead of internal code)
   - default = 0
#
"OF_USE_GREEN_LED"
   - set to 0 to remove the "green led" setting
   - default = 1
#
"OF_FLASHLIGHT_ENABLE"
  - whether the enable the flashlight feature
  - default is "1"
#
"OF_FL_PATH1" and "OF_FL_PATH2"
  - set custom flashlight path (if flashlight isn't working)
  - eg. OF_FL_PATH1="/sys/class/leds/led_torch_2"
#
"FOX_VERSION"
  - the version number of the release
#
"OF_MAINTAINER"
  - the maintainer's name
#
"OF_SCREEN_H"
  - Use this if your screen's aspect ratio is not 16:9
  - to calculate OF_SCREEN_H, if your screen width is not 1080, use this formula: <aspect ratio height>*120
  - e.g. if the aspect ratio is 19:9 then use 19*120 (=2280)
  - use "export OF_SCREEN_H=2280" to resize recovery to 19:9 screen
  - default = 1920
#
"OF_STATUS_H"
  - use this only when the device has a cutout
  - you do not need to add or subtract OF_STATUS_H from OF_SCREEN_H
  - use "export OF_STATUS_H=144" to change statusbar size to 144
  - Tip: take screenshot in android and count status bar height using any graphics editor (eg. MSPaint)
  - default = 72
#
"OF_STATUS_INDENT_LEFT" and "OF_STATUS_INDENT_RIGHT"
  - use OF_STATUS_INDENT_LEFT and OF_STATUS_INDENT_RIGHT when device has rounded corners
  - the recommended setting of these vars is 48 (when device has rounded corners)
  - default = 20
# 
"OF_HIDE_NOTCH"
  - add option to settings that makes status bar black (hides notch)
  - default = 0
# 
"OF_CLOCK_POS"
  - var to control clock position option for devices that has cutout
  - 0 => left, center and right clock positions available
  - 1 => left and right clock positions available
  - 2 => only left clock position available
  - default = 0
# 
"OF_ALLOW_DISABLE_NAVBAR"
  - set to 0 if device doesn't have hardware navigation buttons
  - if OF_ALLOW_DISABLE_NAVBAR is set to 0 user can't hide on-screen navbar
  - default = 1
# 
"OF_DONT_KEEP_LOG_HISTORY"
  - Time-stamped copies of the recovery.log (in .zip format) will now be kept (in /sdcard/Fox/logs/)
  - this means that the previously saved recovery logs will not be overwritten
  - these will be in .zip format; users might need to clear them out periodically
  - enable this to turn off this feature (meaning that lastrecoverylog.log will be overwritten each time the recovery is rebooted)
  - default = 0
#
"FOX_BUGGED_AOSP_ARB_WORKAROUND"
 - Use this to set an old UTC time for the build, to work around bugged alleged anti-rollback protection in some ROMs
 - eg, export FOX_BUGGED_AOSP_ARB_WORKAROUND="1546300800" [Tue Jan 1 2019 00:00:00 GMT]
 -     export FOX_BUGGED_AOSP_ARB_WORKAROUND="1420041600" [Wed Dec 31 2014 16:00:00 GMT]
 - default = nothing
#
"TARGET_DEVICE_ALT"
 - Use this if the device has more than one code name, so that the OrangeFox zip
 - installer can support the alternative code name without just bombing out
 - eg, export TARGET_DEVICE_ALT="kate" (for kenzo/kate)
 -     export TARGET_DEVICE_ALT="willow" (for ginkgo/willow)
 -     export TARGET_DEVICE_ALT="blue, green, yellow, orange" (for multiple alt devices)
 - default = nothing
#
"OF_TARGET_DEVICES"
- Use this if the device has more than one code name, but ROMs and other zip installers
- never check for all code names, therefore always causing "E3004 error 7" problems (eg, raphael/raphaelin)
- What this does is to cause OrangeFox to temporarily switch devices names to prevent error 7 from happening
- Note that this is temporary work-around that lasts until the recovery is rebooted.
- You should list all the valid code names for the device.
- eg, export OF_TARGET_DEVICES="raphaelin,raphael"
-
- NOTE: the purpose of this is quite different from TARGET_DEVICE_ALT (which only impacts on the creation of
- the OrangeFox zip installer). This variable actually impacts on the operation of OrangeFox while flashing
- a zip with OrangeFox. This is why it is mapped out to a separate build variable. It is deliberate done,
- so that it can trigger all these impacts in the live recovery session. You should only deploy a
- build using this variable after plenty of testing in all possible scenarios
#
"OF_SKIP_ORANGEFOX_PROCESS"
 - Use this to 1 to skip the dm-verity/forced-encryption/boot images patches
 - If this is enabled, then "OF_DONT_PATCH_ON_FRESH_INSTALLATION" is also enabled automatically
 - default = 0
#
"OF_VANILLA_BUILD"
 - Set this to 1 to make a plain build that skips all the OrangeFox patches
 - If this is enabled, a whole lot of other variables are also enabled automatically to disable various
 - OrangeFox extras, including "OF_SKIP_ORANGEFOX_PROCESS" above (see bootable/recovery/orangefox.mk for details)
 - With this enabled, it is very possible (even likely) that OrangeFox will be overwritten by stock recovery, so the
 - user may well need to flash some kind of "fcrypt" zip and/or magisk
 - default = 0
#
"OF_SUPPORT_OZIP_DECRYPTION"
 - Set this to 1 to enable support for Realme oZip decryption
 - do not use this unless you know what you are doing (see below)
 - if this is enabled, you must also set "TW_OZIP_DECRYPT_KEY"
 - default = 0
#
"FOX_REMOVE_AAPT"
 - Set this to 1 to remove the aapt binary from the build
 - This binary is 1.7mb in size, and using this variable is useful for reducing the size of the recovery
 - default = 0
#
"OF_CHECK_OVERWRITE_ATTEMPTS"
 - Set this to 1 to check for attempts by a ROM's installer to overwrite OrangeFox with another recovery
 - If this is enabled, then OrangeFox will give users a 40-second countdown, to enable
 - them to reboot OrangeFox to stop the ROM installation, if they want
 - default = 0
#
"OF_FBE_METADATA_MOUNT_IGNORE"
 - Set this to 1 if you are supporting FBE metadata encryption in your fstab, but don't want the user to be
 - spammed with metadata mount errors in ROMs that don't use metadata encryption
 - default = 0
#
"OF_FIX_OTA_UPDATE_MANUAL_FLASH_ERROR"
- Set this to 1 to try to recover from error situations where people flash incremental block-based OTA zips manually
- An error will still be displayed, but OrangeFox will reboot itself into "Ors" mode and attempt to apply the OTA update (this is not guaranteed to always work)
- default = 0
#
"OF_PATCH_AVB20"
- Set this to 1 to try patch AVB 2.0 so that OrangeFox is not replaced by stock recovery
- This requires magiskboot
- default = 0
#
"OF_OTA_BACKUP_STOCK_BOOT_IMAGE"
- Set this to 1 to create a backup of the boot.img from the ROM's zip during the OTA_BAK process when installing a ROM
- default = 0
#
"OF_SUPPORT_ALL_BLOCK_OTA_UPDATES"
- Set this to 1 to enable support for block-based incremental OTA on custom ROMs that have this feature
- If enabled, flashing a custom ROM will run the same OTA_BAK/OTA_RES processes as with MIUI
- This setting is incompatible with OF_DISABLE_MIUI_SPECIFIC_FEATURES/OF_TWRP_COMPATIBILITY_MODE/OF_VANILLA_BUILD
- The default position is to support block-based incremental OTA in MIUI ROMs only
- default = 0
#
"OF_NO_MIUI_PATCH_WARNING"
- Set this to 1 to suppress warnings that not patching MIUI may cause MIUI to not boot, or to overwrite the recovery with stock recovery
- default = 0
#
"OF_DISABLE_MIUI_OTA_BY_DEFAULT"
- Set this to 1 to disable the OTA settings by default, meaning that users have to enable OTA manually
- default = 0
#
"OF_QUICK_BACKUP_LIST"
- Use this to specify the desired default list of partitions selected for "Quick Backup"
- Note: only specify a partition if you mount it in your fstab, else an error will be generated
- The partitions should be separated by a semi-colon, and the list should end with a semi-colon
- Example: export OF_QUICK_BACKUP_LIST="/data;/storage;/persist;"
#
"OF_USE_LOCKSCREEN_BUTTON"
- Set this to 1 to replace the "Swipe up" lockscreen screen with a button
- This is especially useful (for the time being) for 720p screens
- default = 0
#
"FOX_REMOVE_ZIP_BINARY"
- set this to 1 if you do NOT want the InfoZip zip binary to be added (to create zip archives)
- this must be set in a shell script, or at the command line, before building
- the binary will add about 275kb to the size of the recovery image
- default = 0
#
"FOX_ADVANCED_SECURITY"
- set this to 1 to enable the advanced security features
- this forces ADB and MTP to be disabled until after you enter the recovery (ie, until after
- all decryption/recovery passwords are successfully entered)
- default = 0
#
"OF_NO_SAMSUNG_SPECIAL"
- set this to 1 to disable some operations relating only to Samsung devices - these are:
-   1) appending "SEANDROIDENFORCE" to the recovery image of a Samsung device
-   2) creating an Odin flashable tar file of the recovery image
- all decryption/recovery passwords are successfully entered)
- default = 0
#
"OF_DEVICE_WITHOUT_PERSIST"
- set this to 1 if your device does not have a /persist partition
- default = 0
#
"OF_DISABLE_EXTRA_ABOUT_PAGE"
- set this to 1 to disable display of the extra information under the "About" page
- you only need to do this if trying to display it causes problems
- default = 0
#
"OF_NO_SPLASH_CHANGE"
- set this to 1 to disable changing the splash image
- you only need to do this if trying to change the splash image causes problems
- default = 0
#
"FOX_DELETE_MAGISK_ADDON" [Experimental!!!]
- set this to 1 to remove/disable the magisk addon
- If set, the magisk addon zips will be removed from the OrangeFox installer, and
- the relevant menu will be disabled so that magisk cannot be installed from the "Fox Addons" menu
- this feature is experimental - test very carefully!
- default = 0
#
"OF_REPORT_HARMLESS_MOUNT_ISSUES"
- set this to 1 to preserve the old behaviour of reporting harmless mount issues as errors
- the default setting is either not to report them at all, or to report them for information, rather than as errors
- default = 0
#
"FOX_DELETE_INITD_ADDON"
- set this to 1 to delete the initd addon
- default = 0
#
"FOX_INSTALLER_DEBUG_MODE"
- set this to 1 to put the OrangeFox zip installer in debug mode
- in the debug mode, when the zip is flashed, a large amount of information is written into the install.log file
- this is for developer testing only - you must disable this before release
- default = 0
#
"FOX_ENABLE_APP_MANAGER"
- set this to 1 to enable the OrangeFox App Manager (now disabled by default)
- sometimes there are issues with the App Manager, especially with Android 11 and higher - if you don't care, then use this variable to enable it
- default = 0
#
"FOX_USE_GREP_BINARY"
- set this to 1 to replace the toybox/busybox "grep" with a full standalone GNU grep
- this is useful in cases where the original grep is causing problems
- default = 0
#
"FOX_REMOVE_BUSYBOX_BINARY" [FOX_10+ builds only]
- set this to 1 to delete the extra standalone /sbin/busybox binary from the fox_10+ builds
- default = 0
#
"FOX_JAVA8_PATH"
- use this to point to the installed java-8 binary
- eg, export FOX_JAVA8_PATH="/usr/lib/jvm/java-8-openjdk/jre/bin/java"
- default = "/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java"
#
"OF_SPLASH_MAX_SIZE"
- use this to specify the maximum size (in kilobytes) of image files that can safely be used for splash images
- on some devices, the maximum safe size is 65 Kb; on others, the images can be very big (eg, megabytes)
- Note: verify that the maximum value you set is not too big (ie, test it yourself)
- if the splash image chosen by the user is too big, this can easily cause a "System is destroyed" scenario
- in that case, the user will need to flash the recovery image again, via fastboot
- eg, "export OF_SPLASH_MAX_SIZE=128" (ie, 128 Kb maximum)
- default = 4096 (ie, 4mb maximum)
#
"FOX_USE_XZ_UTILS"
- set this to 1 if you want the XZ Utils (lzma, xz) to be added to the build (the binary is about 260kb in size)
- default = 0
#
"FOX_DYNAMIC_SAMSUNG_FIX"
- set this to 1 to provide a workaround for bug in Samsung exynos dynamic partition devices, which causes a bootloop on encountering some binaries
- when enabled, certain binaries (eg, bash, nano, aapt, etc) are removed from (or not added to) the build 
- use this only if the recovery doesn't boot on your Samsung dynamic partition exynos device
- default = 0
#
"FOX_USE_NANO_EDITOR"
   - set this to 1 if you want the OrangeFox prebuilt nano editor to be added
   - this must be set in a shell script, or at the command line, before building
   - this will add about 400kb to the size of the recovery image
   - if this is not set, and "FOX_EXCLUDE_NANO_EDITOR" is not set, then there will be an attempt to compile 
   - nano from source; if this attempt fails, then you might need to clone the nano sources from upstream
   - default = 0
#
"FOX_EXCLUDE_NANO_EDITOR"
- set this to 1 to exclude every specie of nano from the build
- default = 0
#
"FOX_BUILD_BASH"
- set this to 1 to compile bash from source during the build process; this will replace the standard OrangeFox bash binary
- this might require cloning the bash sources from upstream (or updating them if the current version generates build errors)
#
"FOX_USE_SPECIFIC_MAGISK_ZIP"
- use this to point to an alternative Magisk addon installer zip, if the default one does not work well for your device (eg, if it causes bootloops)
-
- eg, "export FOX_USE_SPECIFIC_MAGISK_ZIP=~/Magisk/Magisk-v24.3.zip"
-
-     this will replace (at compile time) the default magisk addon with the one that you specified
- it is the maintainers' responsibility to ensure that the replacement magisk zip is not corrupt, and that it works well with their device
- do not replace the default Magisk zip installer without first having tested the one you want to use on a full
- range of stock and custom ROMs across all Android versions available for your device
- default = the version that is currently in the vendor tree
#
"FOX_VARIANT"
- Use this if building a specific variant for your device (eg, for MIUI, or FBE, or whatever variant for which the build is specific)
- eg, export FOX_VARIANT=MIUI
- default = default
#
"FOX_CUSTOM_BINS_TO_SDCARD" [EXPERIMENTAL WiP]
- This is *highly experimental* and should be considered as work-in-progress. It is very fiddly to use, and must be used with *extreme caution*
- You should only use this if it is ABSOLUTELY NECESSARY. It has too many potential issues
- This can be used to move some big binaries to the internal storage, instead of being located in the recovery ramdisk. This will reduce
- the size of the recovery ramdisk, and those binaries will be made available at runtime. 
- How the binaries are made available to the recovery at runtine depends on the value given to this variable
- Possible values:
- 	"1" = copy the files to the ramdisk at runtime
-	"2" = create symlinks at runtime to the files in the internal storage; 
- 	"3" = create symlinks at build time to the files in the internal storage;
-
- Additional required steps:
-	You must insert the code on the next line into your device tree's postrecoveryboot.sh
		[ -f /sbin/from_fox_sd.sh ] && source /sbin/from_fox_sd.sh
-
- Notes:
- * Some build vars are not compatible with this one (eg, FOX_USE_BASH_SHELL; FOX_ASH_IS_BASH; FOX_DYNAMIC_SAMSUNG_FIX; FOX_USE_GREP_BINARY)
- * When using this build variable, you MUST ALWAYS do a CLEAN BUILD - everytime you build
- * Users MUST flash the OrangeFox zip, *not* the img - otherwise the binaries will not be available to the recovery
- * If a user formats /data or deletes the /sdcard/Fox/FoxFiles/ folder, then the binaries will not be available to the recovery; the OrangeFox zip must be flashed again
- * If decryption does not work, then the binaries will not be available to the recovery
#
"OF_FORCE_PREBUILT_KERNEL" [NEW]
- Set this to 1 to avoid the new 'NO KERNEL CONFIG' error, when using a prebuilt kernel
- default = 0
#
"OF_SKIP_DECRYPTED_ADOPTED_STORAGE"
- Set to 1 to skip adopted storage decryption (only kicks in if the installed ROM is higher than Android 11 and can prevent certain A12 bootloops)
- default = 0
#
"OF_ENABLE_LPTOOLS"
- Set to 1 to add phhusson's lptools to the build.
- This requires syncing the lptools sources (just run "repo sync" from the usual place, or follow the instructions in the error message that will be generated if the sources are missing)
- default = 0
#
"OF_PATCH_VBMETA_FLAG" [NEW] [EXPERIMENTAL WiP]
- Set to 1 to instruct magiskboot v24+ to always patch the vbmeta header when patching the recovery/boot image
- It should not be necessary to use this variable under normal circumstances
- Do *NOT* use this variable unless you are sure of what you are doing (and only if you are getting bootloops after flashing OrangeFox or Magisk or after changing the splash image)
- This is *experimental* and should be considered as work-in-progress. You should test your builds thoroughly to make sure that everything works as expected
- default = 0
#
"OF_FIX_DECRYPTION_ON_DATA_MEDIA" [NEW]
- Set to 1 if decryption fails on your device, despite all efforts. This may solve the problem - and it may not solve it at all
- Most devices should NOT need this at all. But some devices (eg, violet, and some Realme devices) need this setting
- default = 0
#
"OF_VIRTUAL_AB_DEVICE"
- Set to 1 to signify that the device is definitely a native Android 11+ Virtual A/B ("VAB") device
- If this is set, some other relevant variables are enabled automatically (eg, "OF_AB_DEVICE" "OF_VANILLA_BUILD", etc)
- default = 0
#
"OF_DYNAMIC_FULL_SIZE" [NEW]
- This is for Virtual A/B devices only
- Use this to specify the actual space of the "super" partition for ROM installations (instead of using update_engine's calculated allocatable space)
- It is only useful if flashing a stock ROM fails, with an error "The maximum size of all groups for the target slot ... has exceeded allocatable space for dynamic partitions..."
- The exact size of "super" partition (in kb) should be used
- The size *must* be ascertained correctly (possibly, by running "fastboot getvar partition-size:super", and then converting the result from hex to decimal)
- Do *NOT* use this var unless you are absolutely sure of what you are doing; it is your responsibility to ensure that the value supplied is correct
- For most devices, it should not be needed at all
-
- 	eg, "export OF_DYNAMIC_FULL_SIZE=9126805504"
-
- default = none
#
"OF_NO_REFLASH_CURRENT_ORANGEFOX" [NEW]
- This is for Virtual A/B devices only
- if this is enabled, the following features will automatically be removed
   	* "Flash Current OrangeFox"
   	* "Reflash OrangeFox after flashing a ROM"
- default = 0
#
"OF_VENDOR_BOOT_RECOVERY" [NEW - Experimental]
- Do *NOT* use this variable unless you know what you are doing! Bootloops and bricks are *very* possible!
- Set to 1 to build a recovery for a vendor_boot-as-recovery (hdr4) device (normally, hdr4 devices are also Virtual A/B devices)
- There are currently *many* problems with vendor_boot-as-recovery, and custom recoveries are at a very early stage of development
- If this is enabled, the following features will automatically be removed
   	* Changing the OrangeFox splash image/logo
   	* "Flash Current OrangeFox"
   	* "Reflash OrangeFox after flashing a ROM"
- the zip installer that is created will also include the recovery ramdisk image ("ramdisk.cpio.gz")
- if this is enabled, the proper way to flash the built recovery is to reboot an installed working recovery to "fastbootd" mode,
- and extract and flash the recovery ramdisk image by running the command: "fastboot flash vendor_boot:recovery ramdisk.cpio.gz"
- Do NOT flash the zip installer itself, unless you have both of you ROM's original boot.img and vendor_boot.img, *and* know how to recover the device from bootloops or bricks
- This is because the outcome of flashing the recovery.img is *unpredictable* - it might be fine, or brick the device, or make the ROM unbootable; any of these is equally possible
- You really SHOULD stay away from using this variable unless you are a *highly technical risk-taker*, and you can fix any problem *on your own*. You have been warned!
- default = 0
#
"OF_NO_ADDITIONAL_MIUI_PROPS_CHECK" [NEW]
- Set to 1 to disable additional checks for MIUI ROMs
- This is useful for non-Xiaomi devices, and older Xiaomi devices that do not have Android 12+ MIUI
- This might shave about half a second off the bootup times (not much, but every half-second counts!)
#
"OF_DEFAULT_TIMEZONE" [NEW]
- Use this to change the default time zone
- eg, export OF_DEFAULT_TIMEZONE="CET-1"
- It is your responsibility to supply a valid timezone (see gui/theme/common/watch.xml for examples)
- default = "CET-1;CEST,M3.5.0,M10.5.0"
#
# -----------------------------------
